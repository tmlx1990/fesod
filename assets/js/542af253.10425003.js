"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[251],{18:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/writeCellDataWrite-4dacef4c542b683bc9477c595ba19c4c.png"},294:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"write/extra","title":"Extra","description":"This chapter introduces how to write extra information such as comments, hyperlinks, formulas, merged cells, etc.","source":"@site/docs/write/extra.md","sourceDirName":"write","slug":"/write/extra","permalink":"/docs/write/extra","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fesod/edit/main/website/docs/write/extra.md","tags":[],"version":"current","frontMatter":{"id":"extra","title":"Extra"},"sidebar":"docs","previous":{"title":"Head","permalink":"/docs/write/head"},"next":{"title":"Format","permalink":"/docs/write/format"}}');var a=n(5813),l=n(508);const i={id:"extra",title:"Extra"},s="Extra Information",o={},d=[{value:"Comments",id:"comments",level:2},{value:"Overview",id:"overview",level:3},{value:"Code Example",id:"code-example",level:3},{value:"Result",id:"result",level:3},{value:"Hyperlinks",id:"hyperlinks",level:2},{value:"POJO Class",id:"pojo-class",level:3},{value:"Code Example",id:"code-example-1",level:3},{value:"Result",id:"result-1",level:3},{value:"Formulas",id:"formulas",level:2},{value:"POJO Class",id:"pojo-class-1",level:3},{value:"Code Example",id:"code-example-2",level:3},{value:"Result",id:"result-2",level:3},{value:"Template-based Writing",id:"template-based-writing",level:2},{value:"Overview",id:"overview-1",level:3},{value:"Code Example",id:"code-example-3",level:3},{value:"Merged Cells",id:"merged-cells",level:2},{value:"Overview",id:"overview-2",level:3},{value:"Code Example",id:"code-example-4",level:3},{value:"Result",id:"result-3",level:3},{value:"Custom Interceptors",id:"custom-interceptors",level:2},{value:"Overview",id:"overview-3",level:3},{value:"Code Example",id:"code-example-5",level:3},{value:"Result",id:"result-4",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"extra-information",children:"Extra Information"})}),"\n",(0,a.jsx)(t.p,{children:"This chapter introduces how to write extra information such as comments, hyperlinks, formulas, merged cells, etc."}),"\n",(0,a.jsx)(t.h2,{id:"comments",children:"Comments"}),"\n",(0,a.jsx)(t.h3,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(t.p,{children:"Add comments to specific cells through interceptors, suitable for annotations or special reminders."}),"\n",(0,a.jsx)(t.h3,{id:"code-example",children:"Code Example"}),"\n",(0,a.jsx)(t.p,{children:"Custom interceptor"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'@Slf4j\npublic class CommentWriteHandler implements RowWriteHandler {\n\n    @Override\n    public void afterRowDispose(RowWriteHandlerContext context) {\n        if (BooleanUtils.isTrue(context.getHead())) {\n            Sheet sheet = context.getWriteSheetHolder().getSheet();\n            Drawing<?> drawingPatriarch = sheet.createDrawingPatriarch();\n            // Create comment in first row, second column\n            Comment comment = drawingPatriarch.createCellComment(\n                new XSSFClientAnchor(0, 0, 0, 0, (short) 1, 0, (short) 2, 1));\n            comment.setString(new XSSFRichTextString("\u6279\u6ce8\u5185\u5bb9"));\n            sheet.getRow(0).getCell(1).setCellComment(comment);\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"Usage"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'@Test\npublic void commentWrite() {\n    String fileName = "commentWrite" + System.currentTimeMillis() + ".xlsx";\n\n    FastExcel.write(fileName, DemoData.class)\n        .inMemory(Boolean.TRUE) // Comments must enable in-memory mode\n        .registerWriteHandler(new CommentWriteHandler())\n        .sheet("\u6279\u6ce8\u793a\u4f8b")\n        .doWrite(data());\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"result",children:"Result"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"img",src:n(3036).A+"",width:"364",height:"295"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"hyperlinks",children:"Hyperlinks"}),"\n",(0,a.jsx)(t.p,{children:"Write extra hyperlink information"}),"\n",(0,a.jsx)(t.h3,{id:"pojo-class",children:"POJO Class"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"@Getter\n@Setter\n@EqualsAndHashCode\npublic class WriteCellDemoData {\n    private WriteCellData<String> hyperlink;\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"code-example-1",children:"Code Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'@Test\npublic void writeHyperlinkDataWrite() {\n    String fileName = "writeCellDataWrite" + System.currentTimeMillis() + ".xlsx";\n    WriteCellDemoData data = new WriteCellDemoData();\n    // Set hyperlink\n    data.setHyperlink(new WriteCellData<>("\u70b9\u51fb\u8bbf\u95ee").hyperlink("https://example.com"));\n\n    FastExcel.write(fileName, WriteCellDemoData.class)\n        .sheet()\n        .doWrite(Collections.singletonList(data));\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"result-1",children:"Result"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"img",src:n(18).A+"",width:"576",height:"158"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"formulas",children:"Formulas"}),"\n",(0,a.jsx)(t.p,{children:"Write extra formula information"}),"\n",(0,a.jsx)(t.h3,{id:"pojo-class-1",children:"POJO Class"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"@Getter\n@Setter\n@EqualsAndHashCode\npublic class WriteCellDemoData {\n    private WriteCellData<String> formulaData;\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"code-example-2",children:"Code Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'@Test\npublic void writeFormulaDataWrite() {\n    String fileName = "writeCellDataWrite" + System.currentTimeMillis() + ".xlsx";\n    WriteCellDemoData data = new WriteCellDemoData();\n    // Set formula\n    data.setFormulaData(new WriteCellData<>("=SUM(A1:A10)"));\n\n    FastExcel.write(fileName, WriteCellDemoData.class)\n        .sheet()\n        .doWrite(Collections.singletonList(data));\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"result-2",children:"Result"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"img",src:n(18).A+"",width:"576",height:"158"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"template-based-writing",children:"Template-based Writing"}),"\n",(0,a.jsx)(t.h3,{id:"overview-1",children:"Overview"}),"\n",(0,a.jsx)(t.p,{children:"Supports using existing template files and filling data into templates, suitable for standardized output."}),"\n",(0,a.jsx)(t.h3,{id:"code-example-3",children:"Code Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'@Test\npublic void templateWrite() {\n    String templateFileName = "path/to/template.xlsx";\n    String fileName = "templateWrite" + System.currentTimeMillis() + ".xlsx";\n\n    FastExcel.write(fileName, DemoData.class)\n        .withTemplate(templateFileName)\n        .sheet()\n        .doWrite(data());\n}\n'})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"merged-cells",children:"Merged Cells"}),"\n",(0,a.jsx)(t.h3,{id:"overview-2",children:"Overview"}),"\n",(0,a.jsx)(t.p,{children:"Supports merged cells through annotations or custom merge strategies."}),"\n",(0,a.jsx)(t.h3,{id:"code-example-4",children:"Code Example"}),"\n",(0,a.jsx)(t.p,{children:"Annotation approach"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'@Getter\n@Setter\n@EqualsAndHashCode\npublic class DemoMergeData {\n    @ContentLoopMerge(eachRow = 2) // Merge every 2 rows\n    @ExcelProperty("\u5b57\u7b26\u4e32\u6807\u9898")\n    private String string;\n\n    @ExcelProperty("\u65e5\u671f\u6807\u9898")\n    private Date date;\n\n    @ExcelProperty("\u6570\u5b57\u6807\u9898")\n    private Double doubleData;\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"Custom merge strategy"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"public class CustomMergeStrategy extends AbstractMergeStrategy {\n    @Override\n    protected void merge(Sheet sheet, Cell cell, Head head, Integer relativeRowIndex) {\n        // merge method will be called for each cell, ensuring that the same cell is merged only once\n        if (relativeRowIndex != null && relativeRowIndex % 2 == 0 && head.getColumnIndex() == 0) {\n            int startRow = relativeRowIndex + 1; // Row 0 is the header, data starts from row 1\n            int endRow = startRow + 1; // Merge current row and next row\n            sheet.addMergedRegion(new CellRangeAddress(startRow, endRow, 0, 0));\n        }\n    }\n}\n"})}),"\n",(0,a.jsx)(t.p,{children:"Usage"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'@Test\npublic void mergeWrite() {\n    String fileName = "mergeWrite" + System.currentTimeMillis() + ".xlsx";\n\n    // Annotation approach\n    FastExcel.write(fileName, DemoMergeData.class)\n        .sheet("\u5408\u5e76\u793a\u4f8b")\n        .doWrite(data());\n\n    // Custom merge strategy\n    FastExcel.write(fileName, DemoData.class)\n        .registerWriteHandler(new CustomMergeStrategy())\n        .sheet("\u81ea\u5b9a\u4e49\u5408\u5e76")\n        .doWrite(data());\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"result-3",children:"Result"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"img",src:n(4729).A+"",width:"384",height:"291"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"custom-interceptors",children:"Custom Interceptors"}),"\n",(0,a.jsx)(t.h3,{id:"overview-3",children:"Overview"}),"\n",(0,a.jsx)(t.p,{children:"Implement custom logic (such as adding dropdowns) through interceptor operations."}),"\n",(0,a.jsx)(t.h3,{id:"code-example-5",children:"Code Example"}),"\n",(0,a.jsx)(t.p,{children:"Setting dropdowns"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'public class DropdownWriteHandler implements SheetWriteHandler {\n    @Override\n    public void afterSheetCreate(SheetWriteHandlerContext context) {\n        DataValidationHelper helper = context.getWriteSheetHolder().getSheet().getDataValidationHelper();\n        CellRangeAddressList range = new CellRangeAddressList(1, 10, 0, 0); // Dropdown area\n        DataValidationConstraint constraint = helper.createExplicitListConstraint(new String[] {"\u9009\u98791", "\u9009\u98792"});\n        DataValidation validation = helper.createValidation(constraint, range);\n        context.getWriteSheetHolder().getSheet().addValidationData(validation);\n    }\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"result-4",children:"Result"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"img",src:n(6860).A+"",width:"387",height:"299"})})]})}function m(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},508:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var r=n(9729);const a={},l=r.createContext(a);function i(e){const t=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(l.Provider,{value:t},e.children)}},3036:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/commentWrite-d6757c6db4d4ee3ba71d9df3904e489f.png"},4729:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/mergeWrite-976e024ef4e1613c6dab373937cc56ff.png"},6860:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/customHandlerWrite-c05ff79257df5ba72a311793a6e9db60.png"}}]);