"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7395],{508:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>l});var s=i(9729);const n={},r=s.createContext(n);function a(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(r.Provider,{value:t},e.children)}},8775:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"write/simple","title":"Simple","description":"This chapter introduces how to use FastExcel to perform simple Excel writing operations.","source":"@site/docs/write/simple.md","sourceDirName":"write","slug":"/write/simple","permalink":"/docs/write/simple","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fesod/edit/main/website/docs/write/simple.md","tags":[],"version":"current","frontMatter":{"id":"simple","title":"Simple"},"sidebar":"docs","previous":{"title":"Spring","permalink":"/docs/read/spring"},"next":{"title":"Sheet","permalink":"/docs/write/sheet"}}');var n=i(5813),r=i(508);const a={id:"simple",title:"Simple"},l="Simple Writing",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Code Examples",id:"code-examples",level:2},{value:"POJO Class",id:"pojo-class",level:3},{value:"Data List",id:"data-list",level:3},{value:"Writing Methods",id:"writing-methods",level:3},{value:"<code>Lambda</code> Expression",id:"lambda-expression",level:4},{value:"Data List",id:"data-list-1",level:4},{value:"<code>ExcelWriter</code> Object",id:"excelwriter-object",level:4}];function o(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"simple-writing",children:"Simple Writing"})}),"\n",(0,n.jsx)(t.p,{children:"This chapter introduces how to use FastExcel to perform simple Excel writing operations."}),"\n",(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsx)(t.p,{children:"Use FastExcel for simple Excel data writing to quickly write entity objects to Excel files.\nThis is the most basic and commonly used writing approach."}),"\n",(0,n.jsx)(t.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,n.jsx)(t.h3,{id:"pojo-class",children:"POJO Class"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"DemoData"})," POJO class corresponding to the Excel structure:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'@Getter\n@Setter\n@EqualsAndHashCode\npublic class DemoData {\n    @ExcelProperty("\u5b57\u7b26\u4e32\u6807\u9898")\n    private String string;\n    @ExcelProperty("\u65e5\u671f\u6807\u9898")\n    private Date date;\n    @ExcelProperty("\u6570\u5b57\u6807\u9898")\n    private Double doubleData;\n    @ExcelIgnore\n    private String ignore; // Ignored field\n}\n'})}),"\n",(0,n.jsx)(t.h3,{id:"data-list",children:"Data List"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'private List<DemoData> data() {\n    List<DemoData> list = ListUtils.newArrayList();\n    for (int i = 0; i < 10; i++) {\n        DemoData data = new DemoData();\n        data.setString("String" + i);\n        data.setDate(new Date());\n        data.setDoubleData(0.56);\n        list.add(data);\n    }\n    return list;\n}\n'})}),"\n",(0,n.jsx)(t.h3,{id:"writing-methods",children:"Writing Methods"}),"\n",(0,n.jsxs)(t.p,{children:["FastExcel provides multiple writing methods, including ",(0,n.jsx)(t.code,{children:"Lambda"})," expressions, data lists, ",(0,n.jsx)(t.code,{children:"ExcelWriter"})," objects, etc."]}),"\n",(0,n.jsxs)(t.h4,{id:"lambda-expression",children:[(0,n.jsx)(t.code,{children:"Lambda"})," Expression"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'@Test\npublic void simpleWrite() {\n    String fileName = "simpleWrite" + System.currentTimeMillis() + ".xlsx";\n\n    FastExcel.write(fileName, DemoData.class)\n        .sheet("Sheet1")\n        .doWrite(() -> data());\n}\n'})}),"\n",(0,n.jsx)(t.h4,{id:"data-list-1",children:"Data List"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'@Test\npublic void simpleWrite() {\n    String fileName = "simpleWrite" + System.currentTimeMillis() + ".xlsx";\n\n    FastExcel.write(fileName, DemoData.class)\n        .sheet("Sheet1")\n        .doWrite(data());\n}\n'})}),"\n",(0,n.jsxs)(t.h4,{id:"excelwriter-object",children:[(0,n.jsx)(t.code,{children:"ExcelWriter"})," Object"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'@Test\npublic void simpleWrite() {\n    String fileName = "simpleWrite" + System.currentTimeMillis() + ".xlsx";\n\n    try (ExcelWriter excelWriter = FastExcel.write(fileName, DemoData.class).build()) {\n        WriteSheet writeSheet = FastExcel.writerSheet("Sheet1").build();\n        excelWriter.write(data(), writeSheet);\n    }\n}\n'})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}}}]);