"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6900],{508:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(9729);const d={},a=i.createContext(d);function s(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),i.createElement(a.Provider,{value:n},e.children)}},8909:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"read/sheet","title":"Sheet","description":"This chapter introduces how to configure Sheets to read data.","source":"@site/docs/read/sheet.md","sourceDirName":"read","slug":"/read/sheet","permalink":"/docs/read/sheet","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fesod/edit/main/website/docs/read/sheet.md","tags":[],"version":"current","frontMatter":{"id":"sheet","title":"Sheet"},"sidebar":"docs","previous":{"title":"Simple","permalink":"/docs/read/simple"},"next":{"title":"Rows","permalink":"/docs/read/num-rows"}}');var d=t(5813),a=t(508);const s={id:"sheet",title:"Sheet"},r="Sheet",l={},h=[{value:"Reading Multiple Sheets",id:"reading-multiple-sheets",level:2},{value:"Overview",id:"overview",level:3},{value:"Code Example",id:"code-example",level:3},{value:"Reading All Sheets",id:"reading-all-sheets",level:4},{value:"Reading Specific Sheets",id:"reading-specific-sheets",level:2},{value:"Overview",id:"overview-1",level:3},{value:"Code Example",id:"code-example-1",level:3},{value:"Ignoring Hidden Sheets",id:"ignoring-hidden-sheets",level:2},{value:"Overview",id:"overview-2",level:3},{value:"Code Example",id:"code-example-2",level:3}];function o(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"sheet",children:"Sheet"})}),"\n",(0,d.jsx)(n.p,{children:"This chapter introduces how to configure Sheets to read data."}),"\n",(0,d.jsx)(n.h2,{id:"reading-multiple-sheets",children:"Reading Multiple Sheets"}),"\n",(0,d.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,d.jsx)(n.p,{children:"You can read multiple Sheets from an Excel file, but the same Sheet cannot be read repeatedly."}),"\n",(0,d.jsx)(n.h3,{id:"code-example",children:"Code Example"}),"\n",(0,d.jsx)(n.h4,{id:"reading-all-sheets",children:"Reading All Sheets"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-java",children:'@Test\npublic void readAllSheet() {\n    String fileName = "path/to/demo.xlsx";\n\n    FastExcel.read(fileName, DemoData.class, new DemoDataListener()).doReadAll();\n}\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"reading-specific-sheets",children:"Reading Specific Sheets"}),"\n",(0,d.jsx)(n.h3,{id:"overview-1",children:"Overview"}),"\n",(0,d.jsx)(n.p,{children:"You can read a specific Sheet from an Excel file, supporting specification by Sheet index or name."}),"\n",(0,d.jsx)(n.h3,{id:"code-example-1",children:"Code Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-java",children:'@Test\npublic void readSingleSheet() {\n    String fileName = "path/to/demo.xlsx";\n\n    try (ExcelReader excelReader = FastExcel.read(fileName).build()) {\n        // Sheet index\n        ReadSheet sheet1 = FastExcel.readSheet(0).head(DemoData.class).registerReadListener(new DemoDataListener()).build();\n        // Sheet name\n        ReadSheet sheet2 = FastExcel.readSheet("Sheet2").head(DemoData.class).registerReadListener(new DemoDataListener()).build();\n        excelReader.read(sheet1, sheet2);\n    }\n}\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"ignoring-hidden-sheets",children:"Ignoring Hidden Sheets"}),"\n",(0,d.jsx)(n.h3,{id:"overview-2",children:"Overview"}),"\n",(0,d.jsxs)(n.p,{children:["By setting the ",(0,d.jsx)(n.code,{children:"ignoreHiddenSheet"}),' parameter to true, data from Sheets in "hidden" state will not be read.\nThis supports both ',(0,d.jsx)(n.strong,{children:'"normal hidden"'})," and ",(0,d.jsx)(n.strong,{children:'"very hidden"'})," states."]}),"\n",(0,d.jsx)(n.h3,{id:"code-example-2",children:"Code Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-java",children:'@Test\npublic void exceptionRead() {\n    String fileName = "path/to/demo.xlsx";\n\n    FastExcel.read(fileName, DemoData.class, new DemoDataListener())\n            .ignoreHiddenSheet(Boolean.TRUE)\n            .sheet()\n            .doRead();\n}\n'})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:['In Microsoft Excel, Sheets have two hidden states: "normal hidden (xlSheetHidden)" and "very hidden (xlSheetVeryHidden)". Very hidden can be set through ',(0,d.jsx)(n.code,{children:"VBA"}),', and in this case, the hidden Sheet cannot be unhidden through the "Unhide" operation.']}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}}}]);