"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4215],{508:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var a=t(9729);const r={},i=a.createContext(r);function l(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(i.Provider,{value:n},e.children)}},5088:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>x,frontMatter:()=>l,metadata:()=>a,toc:()=>s});const a=JSON.parse('{"id":"read/extra","title":"Extra","description":"This chapter introduces how to read extra information such as comments, hyperlinks, merged cells, etc.","source":"@site/docs/read/extra.md","sourceDirName":"read","slug":"/read/extra","permalink":"/docs/read/extra","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fesod/edit/main/website/docs/read/extra.md","tags":[],"version":"current","frontMatter":{"id":"extra","title":"Extra"},"sidebar":"docs","previous":{"title":"Head","permalink":"/docs/read/head"},"next":{"title":"Exception","permalink":"/docs/read/exception"}}');var r=t(5813),i=t(508);const l={id:"extra",title:"Extra"},o="Extra Information",d={},s=[{value:"Comments",id:"comments",level:2},{value:"Overview",id:"overview",level:3},{value:"Data Listener",id:"data-listener",level:3},{value:"Code Example",id:"code-example",level:3},{value:"Hyperlinks",id:"hyperlinks",level:2},{value:"Overview",id:"overview-1",level:3},{value:"Data Listener",id:"data-listener-1",level:3},{value:"Code Example",id:"code-example-1",level:3},{value:"Merged Cells",id:"merged-cells",level:2},{value:"Overview",id:"overview-2",level:3},{value:"Data Listener",id:"data-listener-2",level:3},{value:"Code Example",id:"code-example-2",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"extra-information",children:"Extra Information"})}),"\n",(0,r.jsx)(n.p,{children:"This chapter introduces how to read extra information such as comments, hyperlinks, merged cells, etc."}),"\n",(0,r.jsx)(n.h2,{id:"comments",children:"Comments"}),"\n",(0,r.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Read extra comment information."}),"\n",(0,r.jsx)(n.h3,{id:"data-listener",children:"Data Listener"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Slf4j\npublic class DemoCommentExtraListener implements ReadListener<DemoData> {\n    @Override\n    public void invoke(DemoData data, AnalysisContext context) {}\n\n    @Override\n    public void doAfterAllAnalysed(AnalysisContext context) {}\n\n    @Override\n    public void extra(CellExtra extra, AnalysisContext context) {\n        log.info("Read extra information: {}", JSON.toJSONString(extra));\n        if(CellExtraTypeEnum.COMMENT == extra.getType()) {\n            log.info("Comment information: {}", extra.getText());\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"code-example",children:"Code Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Test\npublic void extraRead() {\n    String fileName = "path/to/demo.xlsx";\n\n    FastExcel.read(fileName, DemoData.class, new DemoCommentExtraListener())\n            .extraRead(CellExtraTypeEnum.COMMENT)\n            .sheet()\n            .doRead();\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"hyperlinks",children:"Hyperlinks"}),"\n",(0,r.jsx)(n.h3,{id:"overview-1",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Read extra hyperlink information."}),"\n",(0,r.jsx)(n.h3,{id:"data-listener-1",children:"Data Listener"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Slf4j\npublic class DemoHyperLinkExtraListener implements ReadListener<DemoData> {\n    @Override\n    public void invoke(DemoData data, AnalysisContext context) {}\n\n    @Override\n    public void doAfterAllAnalysed(AnalysisContext context) {}\n\n    @Override\n    public void extra(CellExtra extra, AnalysisContext context) {\n        log.info("Read extra information: {}", JSON.toJSONString(extra));\n        if(CellExtraTypeEnum.HYPERLINK == extra.getType()) {\n            log.info("Hyperlink information: {}", extra.getText());\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"code-example-1",children:"Code Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Test\npublic void extraRead() {\n    String fileName = "path/to/demo.xlsx";\n\n    FastExcel.read(fileName, DemoData.class, new DemoHyperLinkExtraListener())\n            .extraRead(CellExtraTypeEnum.HYPERLINK)\n            .sheet()\n            .doRead();\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"merged-cells",children:"Merged Cells"}),"\n",(0,r.jsx)(n.h3,{id:"overview-2",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Read merged cell range information."}),"\n",(0,r.jsx)(n.h3,{id:"data-listener-2",children:"Data Listener"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Slf4j\npublic class DemoMergeExtraListener implements ReadListener<DemoData> {\n    @Override\n    public void invoke(DemoData data, AnalysisContext context) {}\n\n    @Override\n    public void doAfterAllAnalysed(AnalysisContext context) {}\n\n    @Override\n    public void extra(CellExtra extra, AnalysisContext context) {\n        log.info("Read extra information: {}", JSON.toJSONString(extra));\n        if(CellExtraTypeEnum.MERGE == extra.getType()) {\n            log.info("Merged cell range: {} - {}", extra.getFirstRowIndex(), extra.getLastRowIndex());\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"code-example-2",children:"Code Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Test\npublic void extraRead() {\n    String fileName = "path/to/demo.xlsx";\n\n    FastExcel.read(fileName, DemoData.class, new DemoMergeExtraListener())\n            .extraRead(CellExtraTypeEnum.MERGE)\n            .sheet()\n            .doRead();\n}\n'})})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);